cargo-features = ["profile-rustflags"]

[package]
name = "tascii"
version = "0.1.0"
edition = "2021"

[dependencies]
dashmap = { version = "5.4.0", features = ["rayon", "serde"] }
lazy_static = "1.4.0"
write-to-file = "1.0.2"
tracing = "0.1"
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = { version = "1.0" }
crossbeam-channel = "0.5.6"
itertools = "0.10.5"
tokio = { version = "1", features = ["full", "rt", "rt-multi-thread"] }
tokio-postgres = "0.7.10"
futures-util = "*"
anyhow = "*"

uuid = "1.8.0"
inventory = "0.3.6"
parking_lot = { version = "0.12.1", features = ["send_guard"] }

dal = { path = "../dal/" }

[target.'cfg(target_os = "linux")'.dependencies]
linux-futex = "0.1.2"

[profile.test]
panic = 'abort'
rustflags = ["-Cpanic=abort", "-Zpanic_abort_tests"]

# This compiling this into the binary auto-initializes the PyO3 runtime, 
# which is needed to interface with cobbler.
# depending on the side effect of an otherwise unused crate in this case is not great, 
# TODO: initialize the PyO3 runtime manually in our FFI code
[dependencies.pyo3]
version = "0.18.1"
features = ["auto-initialize"]

[package.metadata.cargo-machete]
ignored = ["pyo3"]
