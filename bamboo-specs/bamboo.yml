---
version: 2
plan:
  project-key: OST
  key: OSTLTB
  name: LibLaas Tascii Build

variables:
  REGISTRY: nexus.iol.unh.edu
  CI_IMAGE: nexus.iol.unh.edu/liblaas-ci:latest

stages:
  - Run Checks:
      jobs:
        - check
        - format
        - clippy
        - audit
        - machete
        - test
  - Build:
      jobs:
        - build

check:
  tasks:
    - checkout
    - script:
        description: "Validate Source Code"
        interpreter: SHELL
        scripts:
          - docker pull ${CI_IMAGE}
          - docker run --rm -v "$(pwd)":/app -w /app ${bamboo.CI_IMAGE} cargo make check
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        buildHangingConfig.enabled: "false"
  requirements:
  - Docker
  - linuxos

format:
  tasks:
    - checkout
    - script:
        description: "Check Formatting"
        interpreter: SHELL
        scripts:
          - docker pull ${CI_IMAGE}
          - docker run --rm -v "$(pwd)":/app -w /app ${bamboo.CI_IMAGE} cargo make fmt
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        buildHangingConfig.enabled: "false"
  requirements:
  - Docker
  - linuxos

clippy:
  tasks:
    - checkout
    - script:
        description: "Check Code Style"
        interpreter: SHELL
        scripts:
          - docker pull ${CI_IMAGE}
        # temporarily allow clippy warnings
          - docker run --rm -v "$(pwd)":/app -w /app ${bamboo.CI_IMAGE} cargo make clippy
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        buildHangingConfig.enabled: "false"
  requirements:
  - Docker
  - linuxos

audit:
  tasks:
    - checkout
    - script:
        interpreter: SHELL
        description: "Audit Dependencies"
        scripts:
          - docker pull ${CI_IMAGE}
          - docker run --rm -v "$(pwd)":/app -w /app ${bamboo.CI_IMAGE} bash -c "cargo make audit > audit_output.txt || true"
  requirements:
   - linuxos 
   - Docker
  artifacts:
    - name: Security Audit
      location: ./
      pattern: audit_output.txt

machete:
  tasks:
    - checkout
    - script:
        interpreter: SHELL
        description: "Check for Unnused Dependencies"
        scripts:
          - docker pull ${CI_IMAGE}
          - docker run --rm -v "$(pwd)":/app -w /app ${bamboo.CI_IMAGE} bash -c "cargo make machete > machete_output.txt"
  requirements:
  - Docker
  - linuxos 
  artifacts:
    - name: Unused Dependencies
      location: ./
      pattern: machete_output.txt

test:
  tasks:
    - checkout
    - script:
        interpreter: SHELL
        description: "Run Unit Tests"
        scripts:
          - |
            docker stop test_db > /dev/null 2>&1 || true
            docker rm test_db > /dev/null 2>&1 || true
            docker network rm test_net || true
            docker network create test_net 

            docker run --rm --network test_net --name test_db \
              -e POSTGRES_USER=postgres \
              -e POSTGRES_DB=liblaas \
              -e POSTGRES_PASSWORD=password \
              -d postgres:15-alpine

            export DATABASE_URL=postgres://postgres:password@test_db:5432/liblaas

            docker pull ${bamboo.CI_IMAGE}

            docker run --rm \
              --network test_net \
              -e DATABASE_URL="$DATABASE_URL" \
              -v "$(pwd)":/app \
              -w /app \
              ${bamboo.CI_IMAGE} \
               cargo make --profile ci ci 

            docker stop test_db > /dev/null 2>&1 || true
            docker rm test_db > /dev/null 2>&1 || true
            docker network rm test_net || true
  final-tasks:
    - test-parser:
        type: junit
        test-results:
          - junit.xml
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        buildHangingConfig.enabled: "false"
  requirements:
    - Docker
    - linuxos

build:
  tasks:
  - checkout
  - script:
      interpreter: SHELL
      scripts:
      - |-
        docker build --tag bamboo-laas-reflab-liblaas:${bamboo.repository.revision.number} .
        mkdir images
        docker save -o images/ost-laas-reflab-liblaas.tar bamboo-laas-reflab-liblaas:${bamboo.repository.revision.number}
        echo "${bamboo.repository.revision.number}" > revision.txt
      description: Build laas-reflab docker image
  requirements:
  - Docker
  - linuxos
  artifacts:
    - name: LibLaaS Tascii Docker Images
      location: images
      pattern: "**/*.tar"
    - name: Build Revision
      pattern: revision.txt
      shared: true
      required: true
  final-tasks:
  - script:
      interpreter: SHELL
      scripts:
      - docker image rm bamboo-laas-reflab-liblaas:${bamboo.repository.revision.number} || true
      description: Delete Docker Images From Local Registry

triggers:
  - remote

branches:
  create: for-new-branch
dependencies:
  require-all-stages-passing: true
  enabled-for-branches: true
  block-strategy: none
  plans:
  - OST-BAFL

other:
  concurrent-build-plugin: system-default
  force-stop-build: true
  all-other-apps:
    custom.buildExpiryConfig:
      period: days
      maximumBuildsToKeep: "1"
      enabled: "true"
      expiryTypeArtifact: "true"
      duration: "1"